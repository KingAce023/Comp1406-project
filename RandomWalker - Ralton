public class RandomWalker extends Player{
  protected static int tracker1 = 0;
  protected  int tracker2 = 0;
  protected static int freeTracker1 = 0;
  protected  boolean ifInJail = false;
  protected  boolean hasBeenCaught = false;
  //protected boolean 

  
  public RandomWalker(Field f, int side, String name, int number, String team, char symbol, double x, double y){
    super(f, side, name, number, team, symbol, x, y);
    this.speedX = Math.random()*10;
    this.speedY = Math.random()*10;
  }
  
  
  @Override
  public void play(Field field){
    double targetX, targetY, rotation;
    
    if((this.y <= field.minY)||(this.y >= field.maxY - sprite.getHeight())){
      this.speedY *= -1;
    }
    else if((this.x <= field.minX)||(this.x >= field.maxX - sprite.getWidth())){
      this.speedX *= -1; 
    }
     
    if((field.getTeam.get(this)== 1)&&(!field.team2.isEmpty())){
      if(this.hasBeenCaught((Player)field.team2.get(tracker1),field)){
        
        hasBeenCaught = true;
        targetX = field.getJail2Position()[0] - this.getX();
        targetY = field.getJail2Position()[1] - this.getY();
        rotation = Math.atan2(targetY, targetX)*180/Math.PI; 
        
        this.speedX = this.MAX_SPEED *(90 - Math.abs(rotation))/90;
        if(rotation < 0){
          this.speedY = -(this.MAX_SPEED) + (Math.abs(this.speedX));
        }
        else{
          this.speedY = this.MAX_SPEED - Math.abs(this.speedX);
        }
      }
      else{
        tracker1 +=1;
        if(field.team2.size() == tracker1){
          tracker1 = 0; 
        }
      }
      
      if(this.hasBeenCaught((Player)field.team2.get(tracker1),field) && inJail2(this,field)){
        ifInJail=true;
      }

      if(ifInJail){
        this.setSpeedX(0,this.id);
        this.setSpeedY(0,this.id);
        
        return;
      }
      else{
        return;
      }
    }
     
    
    else if((field.getTeam.get(this)== 2)&&(!field.team1.isEmpty())){
      
    //  System.out.println("Players id : " + this.id);
    //  System.out.println("Have I been caught(RED) : " + this.hasBeenCaught((Player)field.team1.get(tracker2),field));
      if(this.hasBeenCaught((Player)field.team1.get(tracker2),field)){
        
        targetX = field.getJail1Position()[0] - this.getX();
        targetY = field.getJail1Position()[1] - this.getY();
        rotation = Math.atan2(targetY, targetX)*180/Math.PI; 
        
        this.speedX = this.MAX_SPEED *(90 - Math.abs(rotation))/90;
        if(rotation < 0){
          this.speedY = -(this.MAX_SPEED) + (Math.abs(this.speedX));
        }
        else{
          this.speedY = this.MAX_SPEED - Math.abs(this.speedX);
        }
      }
      else{
        tracker2 +=1;
        if(field.team1.size() == tracker2){
          tracker2 = 0; 
        }
      }

      if(this.hasBeenCaught((Player)field.team1.get(tracker2),field) && inJail1(this,field)){
        System.out.println("Enter here 1");
        ifInJail=true;
        ((Player)field.team1.get(tracker2)).chasing = false;
        ((Player)field.team1.get(tracker2)).idTracker = -1;
        this.beingChased = false;
      }
      
      if(this.x > 405){
        this.beingChased = false;
        System.out.println("Enter here 2");
        ((Player)field.team1.get(tracker2)).chasing = false;
        ((Player)field.team1.get(tracker2)).idTracker = -1;
      }
      
      if(ifInJail){
        this.setSpeedX(0,this.id);
        this.setSpeedY(0,this.id);
      }
      
      if(field.freeTeammate((Player)field.team2.get(tracker1), this) && inJail1(this,field)){
        ifInJail = false;
        this.setSpeedX(5,this.id);
        this.setSpeedY(5,this.id);
      }
      else{
        tracker1 +=1; 
        if(field.team2.size() == tracker1){
          tracker1=0;
        }

    }
  }
  }



  
  @Override
  public  void update(Field field){}
  
  
  @Override
  protected void manageException(Field field){
    if(this.x + this.speedX <= field.minX){
      this.x = field.minX;
    }
    else if(this.y + this.speedY <= field.minY){
      this.y = field.minY;
    }
    else if(this.x + sprite.getWidth() + this.speedX >= field.maxX){
      this.x = field.maxX - sprite.getWidth();
    }
    else if(this.y + sprite.getHeight() + this.speedY >= field.maxY){
      this.y = field.maxY - sprite.getHeight();
    }
  }
  
}
