public class Chaser extends Player{
    
    public Chaser(Field f, int side, String name, int number, String team, char symbol, double x, double y){
    super(f, side, name, number, team, symbol, x, y);
    this.speedX = Math.random()*4-2;
    this.speedY = Math.random()*4-2;
  }
    
    @Override
    public void play(Field field){
      if((field.getTeam.get(this)== 1)&&(!field.team2.isEmpty())){
        if((this.y > field.team2.get(0).y) && (this.x > field.team2.get(0).x)){
          speedX = -1 *  (this.MAX_SPEED * Math.sin(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y  - this.y))));
          speedY = -1 *  (this.MAX_SPEED * Math.cos(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y  - this.y))));
        }
        else if((this.y > field.team2.get(0).y) && (this.x > field.team2.get(0).x)){
          speedX = -1 * (this.MAX_SPEED * Math.sin(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y))));
          speedY = -1 * (this.MAX_SPEED * Math.cos(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y))));
        }
        else if((this.y > field.team2.get(0).y) && (this.x > field.team2.get(0).x)){
          speedX = (this.MAX_SPEED * Math.sin(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y))));
          speedY = (this.MAX_SPEED * Math.cos(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y))));
        }
        else{  
          speedX = this.MAX_SPEED * Math.sin(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y)));
          speedY = this.MAX_SPEED * Math.cos(Math.atan((field.team2.get(0).x-this.x)/(field.team2.get(0).y - this.y))); 
        }
        
        if(this.catchOpponent((Player)field.team2.get(0),field)){
          this.speedX = 0;
          this.speedY = 0;
          this.x = field.team2.get(0).x - 2;
          this.y = field.team2.get(0).y - 2;
        }
      }
       
       
      else if ((field.getTeam.get(this)== 2)&&(!field.team1.isEmpty())){
        if((this.y > field.team1.get(0).y) || (this.x > field.team1.get(0).x)){
          speedX = -1 *  (this.MAX_SPEED * Math.sin(Math.atan((field.team1.get(0).x - this.x)/(field.team1.get(0).y - this.y))));
          speedY = -1 *  (this.MAX_SPEED * Math.cos(Math.atan((field.team1.get(0).x - this.x)/(field.team1.get(0).y - this.y))));
        }
        else{  
          speedX = this.MAX_SPEED * Math.sin(Math.atan((field.team1.get(0).x - this.x)/(field.team1.get(0).y - this.y)));
          speedY = this.MAX_SPEED * Math.cos(Math.atan((field.team1.get(0).x - this.x)/(field.team1.get(0).y - this.y))); 
        }
      }
    }
    
    
    @Override
    public void update(Field field){
      
    }
      
    
}

