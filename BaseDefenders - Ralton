public class BaseDefenders extends Player{
  protected static int tracker = 0;
  protected static int tracker1 = 0;
 
   public BaseDefenders(Field f, int side, String name, int number, String team, char symbol, double x, double y){
    super(f, side, name, number, team, symbol, x, y);
    this.speedX = Math.random()*10-5;
    this.speedY = Math.random()*10-5;   
  }
   
   @Override
   public void play(Field field){
     double targetX, targetY, rotation;
     


     if((field.getTeam.get(this)== 1)&&(!field.team2.isEmpty())){
       
       if((this.y <= field.minY)||(this.y >= field.maxY - sprite.getHeight())){
         this.speedY *= -1;
       }
       if((this.x <= field.minX)||(this.x + this.speedX >= (field.maxX/2) - sprite.getWidth()/2)){
         this.speedX *= -1; 
       }
       
       if((field.getTeam2().get(tracker).getX() <= 405)&&(!inJail1((Player)field.team2.get(tracker),field))){
         targetX = field.team2.get(tracker).getX() - this.getX();
         targetY = field.team2.get(tracker).getY() - this.getY();
         rotation = Math.atan2(targetY, targetX)*180/Math.PI; 
         
         this.speedX = this.MAX_SPEED *(90 - Math.abs(rotation))/90;
         if(rotation < 0){
           this.speedY = -(this.MAX_SPEED) + (Math.abs(this.speedX));
         }
         else{
           this.speedY = this.MAX_SPEED - Math.abs(this.speedX);
         }
         
         if(this.catchOpponent((Player)field.team2.get(tracker),field)){
           this.speedX = field.team2.get(tracker).speedX;
           this.speedY = field.team2.get(tracker).speedY;
           
           if((this.x <= field.minX)||(this.x + this.speedX >= (field.maxX/2) - sprite.getWidth()/2)){
             this.speedX *= -1; 
           }
         }
       }
       else{
         tracker++; 
       }
       if(field.team2.size() == tracker){
         tracker=0; 
       }
     }
     
     else if((field.getTeam.get(this)== 2)&&(!field.team1.isEmpty())){
       
       if((this.y <= field.minY)||(this.y >= field.maxY - sprite.getHeight())){
         this.speedY *= -1;
       }
       if((this.x + sprite.getWidth() + this.speedX >= field.maxX)||(this.x + this.speedX <= (field.maxX/2) - sprite.getWidth()/2)){
         this.speedX *= -1; 
       }
       
       if((field.getTeam1().get(tracker1).getX() >= 405)&&(!inJail2((Player)field.team1.get(tracker1),field))){
         targetX = field.team1.get(tracker1).getX() - this.getX();
         targetY = field.team1.get(tracker1).getY() - this.getY();
         rotation = Math.atan2(targetY, targetX)*180/Math.PI; 
         
         this.speedX = this.MAX_SPEED *(90 - Math.abs(rotation))/90;
         if(rotation < 0){
           this.speedY = -(this.MAX_SPEED) + (Math.abs(this.speedX));
         }
         else{
           this.speedY = this.MAX_SPEED - Math.abs(this.speedX);
         }
         
         if(this.catchOpponent((Player)field.team1.get(tracker1),field)){
           this.speedX = field.team1.get(tracker1).speedX;
           this.speedY = field.team1.get(tracker1).speedY;
           
           if((this.x + sprite.getWidth() + this.speedX >= field.maxX)||(this.x + this.speedX <= (field.maxX/2))){
             this.speedX *= 1; 
           }
         }
       }
       else{
         tracker1++; 
       }
       if(field.team1.size() == tracker1){
         tracker1=0; 
       }
     }
   }
       
      
    
    @Override
    public void update(Field field){}
    
    @Override
    protected void manageException(Field field){
      if(this.x + this.speedX <= field.minX){
        this.x = field.minX;
      }
      else if(this.y + this.speedY <= field.minY){
        this.y = field.minY;
      }
      else if(this.x + sprite.getWidth() + this.speedX >= field.maxX){
        this.x = field.maxX - sprite.getWidth();
      }
      else if(this.y + sprite.getHeight() + this.speedY >= field.maxY){
        this.y = field.maxY - sprite.getHeight();
      }
    }
    
}
